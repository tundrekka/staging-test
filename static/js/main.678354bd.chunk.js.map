{"version":3,"sources":["firebase/firebase-config.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","types/types.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/ErrorBoundary.jsx","components/Spinner.jsx","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","setError","err","type","types","uiSetError","payload","removeError","uiRemoveError","startLoading","uiStartLoading","finishLoading","uiFinishLoading","controller","fileUpload","file","a","AbortController","signal","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","abortFetching","e","abort","target","value","loadNotes","uid","collection","orderBy","get","notesSnap","notes","forEach","snapChild","push","id","data","Swal","fire","message","startNewNote","dispatch","getState","title","allowOutsideClick","showCancelButton","showConfirmButton","length","Error","newNote","date","Date","getTime","add","docRef","activeNote","updateSidebarNotes","close","document","querySelector","classList","startUpdateNote","note","url","noteToFiresote","doc","update","refreshNote","startUploading","confirmButtonText","then","result","isConfirmed","active","fileUrl","startDeleteNote","text","icon","confirmButtonColor","cancelButtonColor","delete","deleteNote","startLoadingNotes","setNotes","notesActive","notesLoad","notesUpdated","notesDelete","notesUpdateSidebar","notesCleanLogout","notesLogoutCleaning","startLoginEmailPassword","email","password","signInWithEmailAndPassword","user","login","displayName","catch","startRegisterWithEmailPasswordName","name","createUserWithEmailAndPassword","updateProfile","startGoogleLogin","signInWithPopup","startLogout","signOut","logout","notesAddNew","notesFileUrl","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","ErrorBoundary","state","error","errorInfo","this","setState","className","onClick","window","location","reload","children","React","Spinner","JournalScreen","lazy","AuthRouter","AppRouter","useDispatch","useState","checking","setChecking","isLoggedIn","setIsLoggedIn","useEffect","onAuthStateChanged","fallback","path","exact","initialState","loading","msgError","composeEnhancers","compose","reducers","combineReducers","action","ui","map","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.678354bd.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyAu8R2dliBO2nQ3pc5MvX0to1k8t2n7gtQ',\r\n  authDomain: 'react-practices-b915b.firebaseapp.com',\r\n  databaseURL: 'https://react-practices-b915b-default-rtdb.firebaseio.com',\r\n  projectId: 'react-practices-b915b',\r\n  storageBucket: 'react-practices-b915b.appspot.com',\r\n  messagingSenderId: '350501490135',\r\n  appId: '1:350501490135:web:c830a5bc1321bd4b22cf92',\r\n  measurementId: 'G-L53B3RPBQG'\r\n };\r\n\r\nconst firebaseConfigTesting = {\r\n  apiKey: 'AIzaSyB7C5OmgXO9-e5vLozqJuMhPJNaZsTnGSo',\r\n  authDomain: 'testing-databases-447ef.firebaseapp.com',\r\n  projectId: 'testing-databases-447ef',\r\n  storageBucket: 'testing-databases-447ef.appspot.com',\r\n  messagingSenderId: '462826107758',\r\n  appId: '1:462826107758:web:37ac34bd90b2898548c77f'\r\n};\r\n\r\nif( process.env.NODE_ENV === 'test' ) {\r\n  // testing\r\n  firebase.initializeApp(firebaseConfigTesting);\r\n} else {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\n\r\n// Initialize Firebase\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport { db, googleAuthProvider, firebase}","import { types } from '../types/types'\r\n\r\nexport const setError = ( err ) => ({\r\n   type: types.uiSetError,\r\n   payload: err\r\n})\r\nexport const removeError = () => ({\r\n   type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n   type: types.uiStartLoading,\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n   type: types.uiFinishLoading,\r\n})\r\n","\r\n// abort signal\r\nlet controller\r\n\r\nexport const fileUpload = async (file) => {\r\n\r\n   controller = new AbortController()\r\n   const signal = controller.signal\r\n   \r\n   const cloudUrl = 'https://api.cloudinary.com/v1_1/dtwc8wdqx/upload'\r\n\r\n   const formData = new FormData()\r\n   formData.append('upload_preset', 'react-app')\r\n   formData.append('file', file)\r\n\r\n   try {\r\n      const resp = await fetch(cloudUrl, {\r\n         method: 'POST',\r\n         body: formData,\r\n         signal\r\n      })\r\n      if(resp.ok) {\r\n         const cloudResp = await resp.json()\r\n         return cloudResp.secure_url\r\n      } else {\r\n         return null\r\n      }\r\n   } catch (error) {\r\n      return null\r\n   }\r\n\r\n} \r\n\r\nexport const abortFetching = (e) => {\r\n   controller.abort()\r\n   e.target.value = ''\r\n}","import Swal from 'sweetalert2';\r\nimport { db } from '../firebase/firebase-config'\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n\r\n   try {\r\n      const notesSnap = await db.collection(`journal-users/${uid}/notes`).orderBy('date', 'desc').get()\r\n      const notes = [];\r\n   \r\n      notesSnap.forEach( snapChild => {\r\n         notes.push({\r\n            id: snapChild.id,\r\n            ...snapChild.data()\r\n         })\r\n      })\r\n      return notes\r\n      \r\n   } catch (error) {\r\n      Swal.fire('Something went wrong', error.message, 'error')\r\n      \r\n   }\r\n\r\n}","import Swal from 'sweetalert2'\r\nimport { db } from '../firebase/firebase-config'\r\nimport { abortFetching, fileUpload } from '../helpers/fileUpload'\r\nimport { loadNotes } from '../helpers/loadNotes'\r\nimport { types } from '../types/types'\r\n\r\n\r\nexport const startNewNote = () => {\r\n\r\n   return async(dispatch, getState) => {\r\n\r\n      Swal.fire({\r\n         title: 'LOADING...',\r\n         allowOutsideClick: false,\r\n         showCancelButton: false,\r\n         showConfirmButton: false\r\n      })\r\n\r\n      const maxNotesLimitPerUser = 10\r\n\r\n      try {\r\n         // limit notes per user\r\n         const { notes } = getState().notes\r\n         if(notes.length >= maxNotesLimitPerUser) throw new Error(`Maximum notes per user is ${maxNotesLimitPerUser}`)\r\n\r\n         const { uid } = getState().auth\r\n         \r\n\r\n         const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n         }\r\n         \r\n         const docRef = await db.collection(`journal-users/${uid}/notes`).add(newNote)\r\n         dispatch( activeNote(docRef.id, newNote))\r\n         dispatch( updateSidebarNotes(docRef.id, newNote))\r\n         Swal.close()\r\n         Swal.fire('Created, start writing!', newNote.title, 'success')\r\n         document.querySelector('main').classList.add('toggle')\r\n         \r\n      } catch (error) {\r\n         \r\n         Swal.close()\r\n         Swal.fire('Failed', error.message , 'error')\r\n         document.querySelector('main').classList.add('toggle')\r\n\r\n         return error.message\r\n      }\r\n   }\r\n}\r\n\r\nexport const startUpdateNote = (note) => {\r\n   return async(dispatch, getState) => {\r\n\r\n      Swal.fire({\r\n         title: 'Updating...',\r\n         allowOutsideClick: false,\r\n         showCancelButton: false,\r\n         showConfirmButton: false\r\n      })\r\n\r\n      const limitNoteBodyLength = 4000;\r\n\r\n      try {\r\n         if(note.body.length > limitNoteBodyLength) throw new Error(`Maximum digits per body-note is ${limitNoteBodyLength}, your note has ${note.body.length} digits`)\r\n\r\n         const { uid } = getState().auth\r\n\r\n         if(!note.url) delete note.url\r\n\r\n         const noteToFiresote = {...note}\r\n         delete noteToFiresote.id\r\n\r\n         await db.doc(`journal-users/${uid}/notes/${note.id}`).update( noteToFiresote )\r\n      \r\n         dispatch( refreshNote( note.id, noteToFiresote) )\r\n         Swal.close()\r\n         Swal.fire('Saved', note.title, 'success')\r\n      } catch (error) {\r\n         Swal.close()\r\n         Swal.fire('Error', error.message, 'error')\r\n      }\r\n      \r\n   }\r\n}\r\n\r\nexport const startUploading = (file, e) => {\r\n   return async(dispatch, getState) => {\r\n\r\n      let abort = false\r\n      \r\n      Swal.fire({\r\n         title: 'Uploading...',\r\n         allowOutsideClick: false,\r\n         showCancelButton: false,\r\n         showConfirmButton: true,\r\n         confirmButtonText: 'Cancel'\r\n      }).then( result => {\r\n         if( result.isConfirmed ) {\r\n            abortFetching(e)\r\n            abort = true\r\n         }\r\n      })\r\n\r\n      try {\r\n         const { active:activeNote } = getState().notes\r\n         \r\n         const fileUrl = await fileUpload(file)\r\n         activeNote.url = fileUrl\r\n\r\n         if( !abort ) {\r\n            dispatch( startUpdateNote(activeNote))\r\n         }\r\n\r\n      } catch (error) {\r\n         Swal.fire('Something went wrong', error.message, 'error')\r\n      }\r\n      \r\n   }\r\n}\r\n\r\nexport const startDeleteNote = (id) => {\r\n   return async(dispatch, getState) => {\r\n\r\n      Swal.fire({\r\n         title: 'Are you sure?',\r\n         // eslint-disable-next-line quotes\r\n         text: \"You won't be able to revert this!\",\r\n         icon: 'warning',\r\n         showCancelButton: true,\r\n         confirmButtonColor: '#3085d6',\r\n         cancelButtonColor: '#d33',\r\n         confirmButtonText: 'Yes, delete it!'\r\n      }).then( async(result) => {\r\n         if (result.isConfirmed) {\r\n            Swal.fire({\r\n               title: 'Deleting...',\r\n               allowOutsideClick: false,\r\n               showCancelButton: false,\r\n               showConfirmButton: false\r\n            })\r\n            \r\n            try {\r\n               const { uid } = getState().auth\r\n               await db.doc(`journal-users/${uid}/notes/${id}`).delete()\r\n               dispatch( deleteNote(id))\r\n\r\n               Swal.close()\r\n               Swal.fire(\r\n                  'Deleted!',\r\n                  'Your file has been deleted.',\r\n                  'success'\r\n               )\r\n            } catch (error) {\r\n               Swal.fire('Something went wrong', error.message, 'error')\r\n            }\r\n            \r\n         }\r\n      })\r\n   }\r\n}\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n   return async(dispatch) => {\r\n      try {\r\n         const notes = await loadNotes(uid)\r\n         dispatch(setNotes(notes))\r\n      } catch (error) {\r\n         Swal.fire('Something went wrong', error.message, 'error')\r\n      }\r\n      \r\n   }\r\n}\r\n\r\n// No async actions\r\n\r\nexport const activeNote = (id, note) => ({\r\n   type: types.notesActive,\r\n   payload: {\r\n      id,\r\n      ...note\r\n   }\r\n})\r\n\r\nexport const setNotes = ( notes ) => ({\r\n   type: types.notesLoad,\r\n   payload: notes\r\n})\r\n\r\nexport const refreshNote = (id, note) => ({\r\n   type: types.notesUpdated,\r\n   payload: {\r\n      id,\r\n      note: {\r\n         id,\r\n         ...note\r\n      }\r\n   }\r\n})\r\n\r\nexport const deleteNote = (id) => ({\r\n   type: types.notesDelete,\r\n   payload: id\r\n})\r\n\r\nexport const updateSidebarNotes = (id,note) => ({\r\n   type: types.notesUpdateSidebar,\r\n   payload: {\r\n      id,\r\n      ...note\r\n   }\r\n})\r\n\r\nexport const notesCleanLogout = () => ({\r\n   type: types.notesLogoutCleaning\r\n})\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config'\r\nimport { types } from '../types/types';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { notesCleanLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n   return (dispatch) => {\r\n      dispatch(startLoading())\r\n\r\n      return firebase.auth().signInWithEmailAndPassword(email, password)\r\n         .then( ({user}) => {\r\n            dispatch( login( user.uid, user.displayName))\r\n            dispatch(finishLoading())\r\n            \r\n         } )\r\n         .catch(err => {\r\n            Swal.fire('Something went wrong', err.message, 'error')\r\n            dispatch(finishLoading())\r\n         })\r\n   }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n   return (dispatch) => {\r\n      dispatch(startLoading())\r\n      firebase.auth().createUserWithEmailAndPassword(email, password)\r\n         .then( async({user}) => {\r\n\r\n            await user.updateProfile({displayName: name})\r\n            dispatch( login(user.uid, user.displayName))\r\n            dispatch(finishLoading())\r\n\r\n         } )\r\n         .catch( err => {\r\n            Swal.fire('Something went wrong', err.message, 'error')\r\n            dispatch(finishLoading())\r\n         })\r\n   }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n   return ( dispatch ) => {\r\n      firebase.auth().signInWithPopup( googleAuthProvider )\r\n         .then( ({ user }) => {\r\n            dispatch( login( user.uid, user.displayName) )\r\n         })\r\n         .catch(err =>  Swal.fire('Something went wrong', err.message, 'error'))\r\n   }\r\n}\r\n\r\nexport const startLogout = () => {\r\n   return async(dispatch) => {\r\n      try {\r\n         await firebase.auth().signOut();\r\n         dispatch( logout() )\r\n         dispatch( notesCleanLogout() )\r\n      } catch (error) {\r\n         Swal.fire('Something went wrong', error.message, 'error')\r\n      }\r\n   }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n   type: types.login,\r\n   payload: {\r\n      uid,\r\n      displayName\r\n   }\r\n})\r\n\r\nexport const logout = () => ({\r\n   type: types.logout\r\n})\r\n","\r\nexport const types = {\r\n   login : '[Auth] login',\r\n   logout: '[Auth] logout',\r\n\r\n   uiSetError: '[UI] Set Error',\r\n   uiRemoveError: '[UI] Remove Error',\r\n   uiStartLoading: '[UI] Start loading',\r\n   uiFinishLoading: '[UI] Finish loading',\r\n\r\n   notesAddNew: '[Notes] New note',\r\n   notesActive: '[Notes] Set active note',\r\n   notesLoad: '[Notes] Load notes',\r\n   notesUpdated: '[Notes] Update note',\r\n   notesFileUrl: '[Notes] Update image url',\r\n   notesDelete: '[Notes] Delete note',\r\n   notesLogoutCleaning: '[Notes] Logout cleaning',\r\n   notesUpdateSidebar: '[Notes] Update Sidebar'\r\n   \r\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/\" /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n}\n","import React from 'react';\r\n\r\nexport class ErrorBoundary extends React.Component {\r\n   constructor(props) {\r\n     super(props);\r\n     this.state = { error: null, errorInfo: null };\r\n   }\r\n   \r\n   componentDidCatch(error, errorInfo) {\r\n     // Catch errors in any components below and re-render with error message\r\n     this.setState({\r\n       error: error,\r\n       errorInfo: errorInfo\r\n     })\r\n     // You can also log error messages to an error reporting service here\r\n   }\r\n   \r\n    render() {\r\n      if (this.state.errorInfo) {\r\n        // Error path\r\n        return (\r\n          <div>\r\n            <h2>Something went wrong.</h2>\r\n            <button className=\"btn btn-primary\" onClick={() => {\r\n              window.location.reload()\r\n            }}>Try Reloading</button>\r\n          </div>\r\n        );\r\n      }\r\n      // Normally, just render children\r\n      return this.props.children;\r\n    }  \r\n }","// .spinner {\r\n//    border: 4px solid rgba(0, 0, 0, 0.1);\r\n//    width: 36px;\r\n//    height: 36px;\r\n//    border-radius: 50%;\r\n//    border-left-color: #7a78b4;\r\n//    position: absolute\r\n//    top: 50%;\r\n \r\n//    animation: spin 1s ease infinite;\r\n//  }\r\n \r\n//  @keyframes spin {\r\n//    0% {\r\n//      transform: rotate(0deg);\r\n//    }\r\n \r\n//    100% {\r\n//      transform: rotate(360deg);\r\n//    }\r\n//  }\r\n// * those styles are inline (public/index.html)\r\n\r\nexport const Spinner = () => <div className=\"spinner\"></div>\r\n         \r\n\r\n","/* eslint-disable no-console */\nimport React, { Suspense, useEffect, useState,  } from 'react';\nimport {\n\tHashRouter as Router,\n\tSwitch,\n\tRedirect\n} from 'react-router-dom';\nimport { firebase } from '../firebase/firebase-config'\n\n// import { AuthRouter } from './AuthRouter';\n// import  JournalScreen  from '../components/journal/JournalScreen';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { startLoadingNotes } from '../actions/notes';\nimport { ErrorBoundary } from '../components/ErrorBoundary';\nimport { Spinner } from '../components/Spinner';\n\nconst JournalScreen = React.lazy(() => {\n\treturn import('../components/journal/JournalScreen')\n})\nconst AuthRouter = React.lazy(() => {\n\treturn import('./AuthRouter')\n})\n\n\n\n\nexport const AppRouter = () => {\n\n\tconst dispatch = useDispatch()\n\n\tconst [checking, setChecking] = useState(true)\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false)\n\t\n\tuseEffect(() => {\n\n\t\tfirebase.auth().onAuthStateChanged( (user) => {\n\t\t\tif(user?.uid) {\n\n\t\t\t\tdispatch( login( user.uid, user.displayName))\n\t\t\t\tsetIsLoggedIn( true )\n\t\t\t\tdispatch( startLoadingNotes(user.uid) )\n\n\t\t\t} else {\n\t\t\t\tsetIsLoggedIn( false )\n\t\t\t}\n\t\t\tsetChecking(false)\n\t\t} )\n\t}, [dispatch])\n\n\n\tif( checking ) return null\n\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t<Switch>\n\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t\t<PublicRoute \n\t\t\t\t\t\t\t\tpath=\"/auth\"\n\t\t\t\t\t\t\t\tcomponent={ AuthRouter }\n\t\t\t\t\t\t\t\tisAuthenticated={isLoggedIn}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\t\tcomponent={ JournalScreen }\n\t\t\t\t\t\t\t\tisAuthenticated={isLoggedIn}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Suspense>\t\n\t\t\t\t\t</ErrorBoundary>\t\n\n\t\t\t\t\t<Redirect to=\"/auth/login\" />\n\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t)\n}\n","import { types } from '../types/types'\r\n\r\n\r\n\r\nconst initialState = {\r\n   notes: [],\r\n   active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n   switch (action.type) {\r\n      case types.notesActive:\r\n         return {\r\n            ...state,\r\n            active: {\r\n               ...action.payload\r\n            }\r\n         }\r\n      case types.notesLoad:\r\n         return {\r\n            ...state,\r\n            notes: [ ...action.payload ]\r\n         }\r\n      case types.notesUpdated:\r\n         return {\r\n            ...state,\r\n            notes: state.notes.map(\r\n               note => note.id === action.payload.id\r\n               ? action.payload.note\r\n               : note\r\n\r\n            )\r\n         }\r\n      case types.notesDelete:\r\n         return {\r\n            ...state,\r\n            active: null,\r\n            notes: state.notes.filter( note => note.id !== action.payload )\r\n         }\r\n      case types.notesUpdateSidebar: \r\n         return {\r\n            ...state,\r\n            notes: [ action.payload, ...state.notes ]\r\n         }\r\n      case types.notesLogoutCleaning:\r\n         return {\r\n            ...initialState\r\n         }\r\n   \r\n      default:\r\n         return state\r\n   }\r\n\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n   loading: false,\r\n   msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n   switch (action.type) {\r\n      case types.uiSetError:\r\n         return {\r\n            ...state,\r\n            msgError: action.payload\r\n         }\r\n      case types.uiRemoveError:\r\n         return {\r\n            ...state,\r\n            msgError: null\r\n         }\r\n      case types.uiStartLoading:\r\n         return {\r\n            ...state,\r\n            loading: true\r\n         }\r\n      case types.uiFinishLoading:\r\n         return {\r\n            ...state,\r\n            loading: false\r\n         }\r\n         \r\n      default:\r\n         return state\r\n   }\r\n\r\n}","import { combineReducers, compose, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (process.env.NODE_ENV === 'development' && typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n   auth: authReducer,\r\n   ui: uiReducer,\r\n   notes: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n   reducers,\r\n   composeEnhancers(\r\n      applyMiddleware( thunk )\r\n   )\r\n)","import { types } from '../types/types';\r\n\r\n /*\r\n   {\r\n      uid: fjf49f94\r\n      name: userNameName\r\n   }\r\n*/\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n   \r\n   switch (action.type) {\r\n      case types.login:\r\n         return {\r\n            uid: action.payload.uid,\r\n            name: action.payload.displayName\r\n         }\r\n      case types.logout:\r\n         return { }\r\n   \r\n      default:\r\n         return state\r\n   }\r\n\r\n}\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}